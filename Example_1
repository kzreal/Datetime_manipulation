{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 157,
   "id": "43a9abc6-0275-4866-8801-0bf38d5ed4ad",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Create the datetime sample \n",
    "datesample = '''string\n",
    "**2015-01-04**#\n",
    "/20210506*&\n",
    "2024-02-02\n",
    "'''\n",
    "\n",
    "with open ('date.txt', 'w') as file:\n",
    "    file.write(datesample)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "id": "9df1ba50-7314-45ef-833b-96062402341b",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "# CLEAN function \n",
    "import re\n",
    "def clean(str):\n",
    "    # A collection of acceptances [],   r'' means raw string\n",
    "    str = re.sub(r'[^\\w\\s]', '', str)\n",
    "    return str.strip() if str != '' else None # Pandas interpret None and empty string as NaN. Here None just make things clear. No real impact."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 182,
   "id": "79f834fc-ea6d-4e14-b661-f5da04d73bda",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2015-01-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2021-05-06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2024-02-02</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Date\n",
       "0 2015-01-04\n",
       "1 2021-05-06\n",
       "2 2024-02-02"
      ]
     },
     "execution_count": 182,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Read from txt. Create as a dataframe.\n",
    "import pandas as pd\n",
    "data = []\n",
    "with open ('date.txt', 'r') as file:\n",
    "    next(file)\n",
    "    for line in file:\n",
    "        # Clean line\n",
    "        line = clean(line)\n",
    "        data.append([line])\n",
    "df = pd.DataFrame(data , columns=['Date'])\n",
    "df['Date'] = pd.to_datetime(df['Date'], format= '%Y%m%d') # You need to set the column to be the to_datetime values. It is not in place.\n",
    "df"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
